nextflow_pipeline {

    options "-stub-run"

    name "Test nf-pediatric all profiles with multiple subjects."
    script "../main.nf"

    test("All profiles with multiple subjects - should run successfully") {

        when {
            params {

                params.input = "$projectDir/tests/data/bids-multisub/"
                params.outdir = "$outputDir"
                params.use_fastsurfer = true

                params.dti_shells = "0 1000"
                params.fodf_shells = "0 1000"

                params.connectomics = true
                params.tracking = true
                params.segmentation = true
                params.fs_license = "https://www.dropbox.com/scl/fi/0s8lp6lydyd0rxawxb4jm/license.txt?rlkey=hz54oc0d4sor69avqphtrjvgn&st=9e0yij97&dl=0"

                params.template = "MNIPediatricAsym"
                params.templateflow_cohort = 4
                params.templateflow_res = 1
                params.templateflow_home = "$outputDir/../templateflow"
            }
        }

        then {
            // stable name: All files + folders in ${params.outdir}/ with a stable name.
            def stable_name = getAllFilesFromDir(params.outdir, relative: true, includeDir: true, ignore:  ['pipeline_info/*.{html,json,txt}'])
            // All fastsurfer output.
            def fastsurfer_output = getAllFilesFromDir("$outputDir/../fastsurfer-v2.3.3/", relative: true, includeDir: true)
            assertAll {
                assert workflow.success
                assert snapshot(
                    // Number of successfully completed tasks
                    workflow.trace.succeeded().size(),
                    // Remove the nextflow version from the versions.yml because we test it using different nextflow versions.
                    removeNextflowVersion("$outputDir/pipeline_info/nf-pediatric_software_mqc_versions.yml"),
                    // All stable name.
                    stable_name,
                    // All fastsurfer output.
                    fastsurfer_output
                ).match()
            }
        }
    }
}
