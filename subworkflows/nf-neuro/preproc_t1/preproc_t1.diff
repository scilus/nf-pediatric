Changes in component 'nf-neuro/preproc_t1'
'subworkflows/nf-neuro/preproc_t1/meta.yml' is unchanged
Changes in 'preproc_t1/main.nf':
--- subworkflows/nf-neuro/preproc_t1/main.nf
+++ subworkflows/nf-neuro/preproc_t1/main.nf
@@ -20,13 +20,13 @@
         ch_mask_nlmeans     // channel: [ val(meta), mask ]             , optional
         ch_ref_n4           // channel: [ val(meta), ref, ref-mask ]    , optional
         ch_ref_resample     // channel: [ val(meta), ref ]              , optional
-        ch_weights          // channel: [ val(meta), weights ]          , optional
+        ch_weights          // channel: [ weights ]                    , optional
 
     main:
 
         ch_versions = Channel.empty()
 
-        if ( params.preproc_t1_run_denoising ) {
+        if ( params.preproc_run_denoising ) {
 
             // ** Denoising ** //
             // Result : [ meta, image, mask | [] ]
@@ -45,7 +45,7 @@
             image_nlmeans = ch_image
         }
 
-        if ( params.preproc_t1_run_N4 ) {
+        if ( params.preproc_run_N4 ) {
             // ** N4 correction ** //
             // Result : [ meta, image, reference | [], mask | [] ]
             //  Steps :
@@ -67,7 +67,7 @@
             image_N4 = image_nlmeans
         }
 
-        if ( params.preproc_t1_run_resampling ) {
+        if ( params.preproc_run_resampling ) {
             // ** Resampling ** //
             // Result : [ meta, image, reference | [] ]
             //  Steps :
@@ -85,15 +85,21 @@
             image_resample = image_N4
         }
 
-        if ( params.preproc_t1_run_synthbet ) {
+        if ( params.preproc_run_synthbet ) {
             // ** SYNTHBET ** //
             // Result : [ meta, image, weights | [] ]
             //  Steps :
             //   - join [ meta, image, weights | null ]
             //   - map  [ meta, image, weights | [] ]
             ch_bet = image_resample
-                .join(ch_weights, remainder: true)
-                .map{ it[0..1] + [it[2] ?: []] }
+                .combine(ch_weights)
+                .branch {
+                    infant: it[0].age < 2.5 || it[0].age > 18
+                        return [it[0], it[1], it[2]]
+                    child: it[0].age >= 2.5 && it[0].age <= 18
+                        return [it[0], it[1], []]
+                }
+            ch_bet = ch_bet.infant.mix(ch_bet.child)
 
             BETCROP_SYNTHBET ( ch_bet )
             ch_versions = ch_versions.mix(BETCROP_SYNTHBET.out.versions.first())
@@ -102,7 +108,7 @@
             image_bet = BETCROP_SYNTHBET.out.bet_image
             mask_bet = BETCROP_SYNTHBET.out.brain_mask
         }
-        else if ( params.preproc_t1_run_ants_bet ) {
+        else if ( params.preproc_run_ants_bet ) {
             // ** ANTSBET ** //
             // The template and probability maps are mandatory if running antsBET. Since the
             // error message from nextflow when they are absent is either non-informative or
@@ -127,7 +133,7 @@
             mask_bet = Channel.empty()
         }
 
-        if ( params.preproc_t1_run_crop ) {
+        if ( params.preproc_run_crop ) {
             // ** Crop image ** //
             ch_crop = image_bet
                 .map{ it + [[]] }

'subworkflows/nf-neuro/preproc_t1/tests/main.nf.test.snap' is unchanged
'subworkflows/nf-neuro/preproc_t1/tests/nextflow_quick.config' is unchanged
'subworkflows/nf-neuro/preproc_t1/tests/nextflow_synthbet.config' is unchanged
'subworkflows/nf-neuro/preproc_t1/tests/tags.yml' is unchanged
'subworkflows/nf-neuro/preproc_t1/tests/nextflow.config' is unchanged
'subworkflows/nf-neuro/preproc_t1/tests/main.nf.test' is unchanged
'subworkflows/nf-neuro/preproc_t1/tests/nextflow_skip_all.config' is unchanged
************************************************************
