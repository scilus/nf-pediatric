Changes in component 'nf-neuro/bundle_seg'
'subworkflows/nf-neuro/bundle_seg/meta.yml' is unchanged
Changes in 'bundle_seg/main.nf':
--- subworkflows/nf-neuro/bundle_seg/main.nf
+++ subworkflows/nf-neuro/bundle_seg/main.nf
@@ -53,6 +53,10 @@
         ch_versions = Channel.empty()
 
         // ** Setting up Atlas reference channels. ** //
+        atlas_infant_t2w = Channel.fromPath("$projectDir/assets/atlas-Neonates/tpl-UNCBCP4DInfant_cohort-00_desc-brain_T2w.nii.gz", checkIfExists: true, relative: true)
+        atlas_infant_config = Channel.fromPath("$projectDir/assets/atlas-Neonates/config_infant.json", checkIfExists: true, relative: true)
+        atlas_infant_average = Channel.fromPath("$projectDir/assets/atlas-Neonates/atlas/", checkIfExists: true, relative: true)
+
         if ( params.atlas_directory ) {
             atlas_anat = Channel.fromPath("$params.atlas_directory/atlas/mni_masked.nii.gz", checkIfExists: true, relative: true)
             atlas_config = Channel.fromPath("$params.atlas_directory/config/config_fss_1.json", checkIfExists: true, relative: true)
@@ -71,8 +75,16 @@
 
         // ** Register the atlas to subject's space. Set up atlas file as moving image ** //
         // ** and subject anat as fixed image.                                         ** //
-        ch_register =  ch_fa.combine(atlas_anat)
-                            .map{ it + [[]] }
+        ch_register =  ch_fa
+            .combine(atlas_infant_t2w)
+            .combine(atlas_anat)
+            .branch{
+                infant: it[0].age < 0.5 || it[0].age > 18
+                    return [ it[0], it[1], it[2], [] ]
+                child: true
+                    return [ it[0], it[1], it[3], [] ]
+            }
+        ch_register = ch_register.infant.mix(ch_register.child)
 
         REGISTRATION_ANTS ( ch_register )
         ch_versions = ch_versions.mix(REGISTRATION_ANTS.out.versions.first())
@@ -80,8 +92,17 @@
         // ** Perform bundle recognition and segmentation ** //
         ch_recognize_bundle = ch_tractogram
             .join(REGISTRATION_ANTS.out.affine)
+            .combine(atlas_infant_config)
+            .combine(atlas_infant_average)
             .combine(atlas_config)
             .combine(atlas_average)
+            .branch {
+                infant: it[0].age < 0.5 || it[0].age > 18
+                    return [ it[0], it[1], it[2], it[3], it[4] ]
+                child: true
+                    return [ it[0], it[1], it[2], it[5], it[6] ]
+            }
+        ch_recognize_bundle = ch_recognize_bundle.infant.mix(ch_recognize_bundle.child)
 
         BUNDLE_RECOGNIZE ( ch_recognize_bundle )
         ch_versions = ch_versions.mix(BUNDLE_RECOGNIZE.out.versions.first())

'subworkflows/nf-neuro/bundle_seg/tests/main.nf.test.snap' is unchanged
'subworkflows/nf-neuro/bundle_seg/tests/tags.yml' is unchanged
'subworkflows/nf-neuro/bundle_seg/tests/nextflow.config' is unchanged
'subworkflows/nf-neuro/bundle_seg/tests/main.nf.test' is unchanged
************************************************************
