Changes in component 'nf-neuro/preproc_dwi'
'subworkflows/nf-neuro/preproc_dwi/meta.yml' is unchanged
Changes in 'preproc_dwi/main.nf':
--- subworkflows/nf-neuro/preproc_dwi/main.nf
+++ subworkflows/nf-neuro/preproc_dwi/main.nf
@@ -2,8 +2,14 @@
 include { DENOISING_MPPCA as DENOISE_REVDWI } from '../../../modules/nf-neuro/denoising/mppca/main'
 include { PREPROC_GIBBS as PREPROC_GIBBS_DWI } from '../../../modules/nf-neuro/preproc/gibbs/main'
 include { PREPROC_GIBBS as PREPROC_GIBBS_REVDWI } from '../../../modules/nf-neuro/preproc/gibbs/main'
+include { IMAGE_POWDERAVERAGE } from '../../../modules/nf-neuro/image/powderaverage/main'
+include { IMAGE_APPLYMASK as BET_DWI } from '../../../modules/nf-neuro/image/applymask/main'
+include { BETCROP_SYNTHBET } from '../../../modules/nf-neuro/betcrop/synthbet/main'
+include { IMAGE_CROPVOLUME as CROPDWI } from '../../../modules/nf-neuro/image/cropvolume/main'
+include { IMAGE_CROPVOLUME as CROPMASK } from '../../../modules/nf-neuro/image/cropvolume/main'
+include { IMAGE_CONVERT as CONVERT } from '../../../modules/nf-neuro/image/convert'
 include { BETCROP_FSLBETCROP } from '../../../modules/nf-neuro/betcrop/fslbetcrop/main'
-include { IMAGE_CROPVOLUME } from '../../../modules/nf-neuro/image/cropvolume/main'
+include { IMAGE_CROPVOLUME as CROPB0 } from '../../../modules/nf-neuro/image/cropvolume/main'
 include { PREPROC_N4 as N4_DWI } from '../../../modules/nf-neuro/preproc/n4/main'
 include { PREPROC_NORMALIZE as NORMALIZE_DWI } from '../../../modules/nf-neuro/preproc/normalize/main'
 include { IMAGE_RESAMPLE as RESAMPLE_DWI } from '../../../modules/nf-neuro/image/resample/main'
@@ -21,6 +27,7 @@
         ch_b0            // Channel: [ val(meta), b0 ], optional
         ch_rev_b0        // channel: [ val(meta), rev-b0 ], optional
         ch_config_topup  // channel: [ 'topup.cnf' ], optional
+        ch_weights       // channel: [ 'weights' ], optional
 
     main:
 
@@ -28,7 +35,7 @@
         ch_multiqc_files = Channel.empty()
 
         // ** Denoise DWI ** //
-        if (params.preproc_dwi_run_denoising) {
+        if (params.preproc_dwi_run_denoising && !params.skip_dwi_preprocessing) {
             ch_dwi_bvalbvec = ch_dwi
                 .multiMap { meta, dwi, bval, bvec ->
                     dwi:    [ meta, dwi ]
@@ -52,11 +59,13 @@
             ch_versions = ch_versions.mix(DENOISE_DWI.out.versions.first())
 
             // ** Denoise REV-DWI ** //
-
             ch_denoise_rev_dwi = ch_rev_dwi_bvalbvec.rev_dwi
-                .map{ it + [[]] }
-
-            DENOISE_REVDWI ( ch_denoise_rev_dwi )
+                .branch{
+                    withrev: it[1]
+                        return [ it[0], it[1], []]
+                }
+
+            DENOISE_REVDWI ( ch_denoise_rev_dwi.withrev )
             ch_versions = ch_versions.mix(DENOISE_REVDWI.out.versions.first())
 
             ch_dwi = DENOISE_DWI.out.image
@@ -67,7 +76,7 @@
                 .join(ch_rev_dwi_bvalbvec.rev_bvs_files)
         } // No else, we just use the input DWI
 
-        if (params.preproc_dwi_run_degibbs) {
+        if (params.preproc_dwi_run_degibbs && !params.skip_dwi_preprocessing) {
             ch_dwi_bvalbvec = ch_dwi
                 .multiMap { meta, dwi, bval, bvec ->
                     dwi:    [ meta, dwi ]
@@ -105,27 +114,78 @@
         ch_multiqc_files = ch_multiqc_files.mix(TOPUP_EDDY.out.mqc)
 
         // ** Bet-crop DWI ** //
-        ch_betcrop_dwi = TOPUP_EDDY.out.dwi
-            .join(TOPUP_EDDY.out.bval)
-            .join(TOPUP_EDDY.out.bvec)
-
-        BETCROP_FSLBETCROP ( ch_betcrop_dwi )
-        ch_versions = ch_versions.mix(BETCROP_FSLBETCROP.out.versions.first())
+        if ( params.dwi_run_synthstrip && !params.skip_dwi_preprocessing ) {
+            ch_pwd_avg = TOPUP_EDDY.out.dwi
+                .join(TOPUP_EDDY.out.bval)
+                .map{ it + [[]] }
+
+            IMAGE_POWDERAVERAGE ( ch_pwd_avg )
+            ch_versions = ch_versions.mix(IMAGE_POWDERAVERAGE.out.versions.first())
+            ch_pwdavg = IMAGE_POWDERAVERAGE.out.pwd_avg
+
+            ch_synthstrip = IMAGE_POWDERAVERAGE.out.pwd_avg
+                .combine(ch_weights)
+                .map { it ->
+                    def pwd_avg = it[0..1]
+                    def weights = it.size() > 2 ? it[2] : []
+                    pwd_avg + [weights]
+                }
+
+            BETCROP_SYNTHBET ( ch_synthstrip )
+            ch_versions = ch_versions.mix(BETCROP_SYNTHBET.out.versions.first())
+
+            ch_apply_mask = TOPUP_EDDY.out.dwi
+                .join(BETCROP_SYNTHBET.out.brain_mask)
+
+            BET_DWI ( ch_apply_mask )
+            ch_versions = ch_versions.mix(BET_DWI.out.versions.first())
+
+            CROPDWI ( BET_DWI.out.image
+                .map{ it + [[]] })
+            ch_versions = ch_versions.mix(CROPDWI.out.versions.first())
+
+            ch_cropmask = BETCROP_SYNTHBET.out.brain_mask
+                .join(CROPDWI.out.bounding_box)
+            CROPMASK ( ch_cropmask )
+            ch_versions = ch_versions.mix(CROPMASK.out.versions.first())
+
+            CONVERT ( CROPMASK.out.image )
+            ch_versions = ch_versions.mix(CONVERT.out.versions.first())
+
+            ch_dwi = CROPDWI.out.image
+            ch_mask = CONVERT.out.image
+            ch_bbox = CROPDWI.out.bounding_box
+
+        } else {
+
+            ch_pwdavg = Channel.empty()
+            ch_betcrop_dwi = TOPUP_EDDY.out.dwi
+                .join(TOPUP_EDDY.out.bval)
+                .join(TOPUP_EDDY.out.bvec)
+
+            BETCROP_FSLBETCROP ( ch_betcrop_dwi )
+            ch_versions = ch_versions.mix(BETCROP_FSLBETCROP.out.versions.first())
+
+            ch_dwi = BETCROP_FSLBETCROP.out.image
+            ch_mask = BETCROP_FSLBETCROP.out.mask
+            ch_bbox = BETCROP_FSLBETCROP.out.bbox
+
+        }
 
         // ** Crop b0 ** //
         ch_crop_b0 = TOPUP_EDDY.out.b0
-            .join(BETCROP_FSLBETCROP.out.bbox)
-
-        IMAGE_CROPVOLUME ( ch_crop_b0 )
-        ch_versions = ch_versions.mix(IMAGE_CROPVOLUME.out.versions.first())
-
-        ch_dwi_preproc = BETCROP_FSLBETCROP.out.image
+            .join(ch_bbox)
+
+        CROPB0 ( ch_crop_b0 )
+        ch_versions = ch_versions.mix(CROPB0.out.versions.first())
+
+        ch_dwi_preproc = ch_dwi
         ch_dwi_n4 = Channel.empty()
-        if (params.preproc_dwi_run_N4) {
+        if (params.preproc_dwi_run_N4 && !params.skip_dwi_preprocessing) {
             // ** N4 DWI ** //
             ch_N4 = ch_dwi_preproc
-                .join(IMAGE_CROPVOLUME.out.image)
-                .join(BETCROP_FSLBETCROP.out.mask)
+                .join(CROPB0.out.image)
+                .join(ch_mask)
 
             N4_DWI ( ch_N4 )
             ch_versions = ch_versions.mix(N4_DWI.out.versions.first())
@@ -138,7 +198,7 @@
         ch_normalize = ch_dwi_preproc
             .join(TOPUP_EDDY.out.bval)
             .join(TOPUP_EDDY.out.bvec)
-            .join(BETCROP_FSLBETCROP.out.mask)
+            .join(ch_mask)
 
         NORMALIZE_DWI ( ch_normalize )
         ch_versions = ch_versions.mix(NORMALIZE_DWI.out.versions.first())
@@ -164,9 +224,7 @@
         ch_versions = ch_versions.mix(EXTRACTB0_RESAMPLE.out.versions.first())
 
         // ** Resample mask ** //
-        ch_resample_mask = BETCROP_FSLBETCROP.out.mask
-            .map{ it + [[]] }
-
+        ch_resample_mask = ch_mask.map{ it + [[]] }
         RESAMPLE_MASK ( ch_resample_mask )
         ch_versions = ch_versions.mix(RESAMPLE_MASK.out.versions.first())
 
@@ -174,9 +232,10 @@
         dwi                 = ch_dwi_preproc                // channel: [ val(meta), dwi-preproc ]
         bval                = TOPUP_EDDY.out.bval           // channel: [ val(meta), bval-corrected ]
         bvec                = TOPUP_EDDY.out.bvec           // channel: [ val(meta), bvec-corrected ]
+        pwdavg              = ch_pwdavg                     // channel: [ val(meta), pwdavg ]
         b0                  = EXTRACTB0_RESAMPLE.out.b0     // channel: [ val(meta), b0-preproc ]
         b0_mask             = RESAMPLE_MASK.out.image       // channel: [ val(meta), b0-mask ]
-        dwi_bounding_box    = BETCROP_FSLBETCROP.out.bbox   // channel: [ val(meta), dwi-bounding-box ]
+        dwi_bounding_box    = ch_bbox                       // channel: [ val(meta), dwi-bounding-box ]
         dwi_topup_eddy      = TOPUP_EDDY.out.dwi            // channel: [ val(meta), dwi-after-topup-eddy ]
         dwi_n4              = ch_dwi_n4                     // channel: [ val(meta), dwi-after-n4 ]
         mqc                 = ch_multiqc_files              // channel: [ val(meta), mqc ]

'subworkflows/nf-neuro/preproc_dwi/tests/main.nf.test.snap' is unchanged
'subworkflows/nf-neuro/preproc_dwi/tests/tags.yml' is unchanged
'subworkflows/nf-neuro/preproc_dwi/tests/nextflow.config' is unchanged
'subworkflows/nf-neuro/preproc_dwi/tests/main.nf.test' is unchanged
************************************************************
