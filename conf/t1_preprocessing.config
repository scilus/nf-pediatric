/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    //** T1 preprocessing **//
    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1W:DENOISING_NLMEANS' {
        ext.number_of_coils = params.t1_denoise_number_of_coils
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1W:PREPROC_N4' {
        ext.bspline_knot_per_voxel = params.t1_bias_bspline_knot_per_voxel
        ext.shrink_factor = params.t1_bias_shrink_factor
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1W:IMAGE_RESAMPLE' {
        ext.voxel_size = params.t1_resample_voxel_size
        ext.interp = params.t1_resample_interp
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1W:BETCROP_SYNTHBET' {
        ext.border = params.t1_synthstrip_border
        ext.nocsf = params.t1_synthstrip_nocsf
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1W:BETCROP_ANTSBET' {
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1W:CROPVOLUME' {
        ext.output_bbox = true
        ext.first_suffix = "T1w"
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("_cropped.nii.gz") ) { "${meta.id}_${ses}desc-preproc_T1w.nii.gz" }
                else if ( filename.contains(".pkl") ) { "${meta.id}_${ses}desc-boundingbox.pkl" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1W:CROPVOLUME_MASK' {
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("_cropped.nii.gz") ) { "${meta.id}_${ses}desc-brain_mask.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }
}
