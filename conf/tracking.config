/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRACKING_PFTTRACKING' {
        ext.pft_fa_seeding_mask_threshold = params.pft_fa_threshold
        ext.pft_seeding_mask_type = params.pft_seeding_mask_type
        ext.pft_random_seed = params.pft_random_seed
        ext.pft_compress_streamlines = params.pft_compress
        ext.pft_compress_value = params.pft_compress_value
        ext.pft_algo = params.pft_algo
        ext.pft_seeding = params.pft_seeding_type
        ext.pft_nbr_seeds = params.pft_nbr_seeds
        ext.pft_step = params.pft_step
        ext.pft_theta = params.pft_theta
        ext.pft_sfthres = params.pft_sfthres
        ext.pft_sfthres_init = params.pft_sfthres_init
        ext.pft_min_len = params.pft_min_len
        ext.pft_max_len = params.pft_max_len
        ext.pft_particles = params.pft_particles
        ext.pft_back = params.pft_back
        ext.pft_front = params.pft_front
        ext.basis = params.pft_sh_basis
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/dwi/" : "${params.outdir}/${meta.id}/dwi/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("pft_tracking.trk") ) { "${meta.id}_${ses}desc-pft_tractogram.trk" }
                else if ( filename.contains("map_include") ) { "${meta.id}_${ses}space-DWI_label-include_desc-pft_probseg.nii.gz" }
                else if ( filename.contains("map_exclude") ) { "${meta.id}_${ses}space-DWI_label-exclude_desc-pft_probseg.nii.gz" }
                else if ( filename.contains("pft_seeding_mask") ) { "${meta.id}_${ses}space-DWI_label-seeding_desc-pft_mask.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRACKING_LOCALTRACKING' {
        ext.local_fa_tracking_mask_threshold = params.local_fa_tracking_mask_threshold
        ext.local_fa_seeding_mask_threshold = params.local_fa_seeding_mask_threshold
        ext.local_tracking_mask_type = params.local_tracking_mask_type
        ext.local_seeding_mask_type = params.local_seeding_mask_type
        ext.local_step = params.local_step
        ext.local_random_seed = params.local_random_seed
        ext.local_seeding = params.local_seeding_type
        ext.local_nbr_seeds = params.local_nbr_seeds
        ext.local_min_len = params.local_min_len
        ext.local_max_len = params.local_max_len
        ext.local_theta = params.local_theta
        ext.local_sfthres = params.local_sfthres
        ext.local_algo = params.local_algo
        ext.local_compress_value = params.local_compress_value
        ext.basis = params.local_sh_basis
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/dwi/" : "${params.outdir}/${meta.id}/dwi/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("local_tracking.trk") ) { "${meta.id}_${ses}desc-local_tractogram.trk" }
                else if ( filename.contains("seeding_mask") ) { "${meta.id}_${ses}space-DWI_label-seeding_desc-local_mask.nii.gz" }
                else if ( filename.contains("tracking_mask") ) { "${meta.id}_${ses}space-DWI_label-tracking_desc-local_mask.nii.gz"}
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRACTOGRAM_MATH' {
        ext.operation = "union"
        ext.suffix = "concatenated_tractogram"
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/dwi/" : "${params.outdir}/${meta.id}/dwi/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("concatenated_tractogram.trk") ) { "${meta.id}_${ses}desc-concatenated_tractogram.trk" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }
}
